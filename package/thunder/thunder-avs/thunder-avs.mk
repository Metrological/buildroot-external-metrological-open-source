################################################################################
#
# thunder-avs
#
################################################################################

THUNDER_AVS_VERSION = 5f4f7f5469d814da0cec048ec77335f923153495
THUNDER_AVS_SITE_METHOD = git
THUNDER_AVS_SITE = git@github.com:WebPlatformForEmbedded/WPEPluginAVS.git
THUNDER_AVS_INSTALL_STAGING = YES
THUNDER_AVS_CONF_OPTS += -DBUILD_REFERENCE=$(THUNDER_AVS_VERSION)
THUNDER_AVS_DEPENDECIES += thunder avs-device-sdk

ifneq ($(BR2_PACKAGE_THUNDER_AVS_PLUGIN_NAME),)
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_NAME=$(BR2_PACKAGE_THUNDER_AVS_PLUGIN_NAME)
endif

ifeq ($(BR2_PACKAGE_THUNDER_AVS_AUTOSTART),y)
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_AUTOSTART=true
else
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_AUTOSTART=false
endif

ifeq ($(BR2_PACKAGE_THUNDER_AVS_PLATFORM_RPI3),y)
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_PLATFORM="rpi3"
else ifeq ($(BR2_PACKAGE_THUNDER_AVS_PLATFORM_CUSTOM),y)
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_PLATFORM=$(BR2_PACKAGE_THUNDER_AVS_PLATFORM_CUSTOM_VALUE)
endif

ifneq ($(BR2_PACKAGE_THUNDER_AVS_DATA_PATH),)
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_DATA_PATH=$(BR2_PACKAGE_THUNDER_AVS_DATA_PATH)
endif

ifneq ($(BR2_PACKAGE_THUNDER_AVS_CUSTOM_ALEXA_CLIENT_CONFIG),"")
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_ALEXA_CLIENT_CONFIG=$(call qstrip,$(BR2_PACKAGE_THUNDER_AVS_CUSTOM_ALEXA_CLIENT_CONFIG))
else
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_ALEXA_CLIENT_CONFIG="$(call qstrip,$(BR2_PACKAGE_THUNDER_AVS_DATA_PATH))/$(call qstrip,$(BR2_PACKAGE_THUNDER_AVS_PLUGIN_NAME))/AlexaClientSDKConfig.json"
endif

ifneq ($(BR2_PACKAGE_THUNDER_AVS_CUSTOM_SMART_SCREEN_CONFIG),"")
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_SMART_SCREEN_CONFIG=$(call qstrip,$(BR2_PACKAGE_THUNDER_AVS_CUSTOM_SMART_SCREEN_CONFIG))
else
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_SMART_SCREEN_CONFIG="$(call qstrip,$(BR2_PACKAGE_THUNDER_AVS_DATA_PATH))/$(call qstrip,$(BR2_PACKAGE_THUNDER_AVS_PLUGIN_NAME))/SmartScreenSDKConfig.json"
endif

ifeq ($(BR2_PACKAGE_THUNDER_AVS_LOG_LEVEL_NONE),y)
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_LOG_LEVEL="NONE"
else ifeq ($(BR2_PACKAGE_THUNDER_AVS_LOG_LEVEL_CRITICAL),y)
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_LOG_LEVEL="CRITICAL"
else ifeq ($(BR2_PACKAGE_THUNDER_AVS_LOG_LEVEL_ERROR),y)
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_LOG_LEVEL="ERROR"
else ifeq ($(BR2_PACKAGE_THUNDER_AVS_LOG_LEVEL_WARN),y)
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_LOG_LEVEL="WARN"
else ifeq ($(BR2_PACKAGE_THUNDER_AVS_LOG_LEVEL_DEBUG0),y)
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_LOG_LEVEL="DEBUG0"
else ifeq ($(BR2_PACKAGE_THUNDER_AVS_LOG_LEVEL_DEBUG9),y)
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_LOG_LEVEL="DEBU9"
endif

ifeq ($(BR2_PACKAGE_THUNDER_AVS_AUDIOSOURCE_PORTAUDIO),y)
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_AUDIOSOURCE="PORTAUDIO"
else ifeq ($(BR2_PACKAGE_THUNDER_AVS_AUDIOSOURCE_BLRC),y)
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_AUDIOSOURCE="BluetoothRemoteControl"
else ifeq ($(BR2_PACKAGE_THUNDER_AVS_AUDIOSOURCE_CUSTOM),y)
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_AUDIOSOURCE=$(BR2_PACKAGE_THUNDER_AVS_AUDIOSOURCE_CUSTOM_VALUE)
endif

ifneq ($(BR2_PACKAGE_THUNDER_AVS_AUDIOSOURCE),)
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_AUDIOSOURCE=$(BR2_PACKAGE_THUNDER_AVS_AUDIOSOURCE)
endif

ifeq ($(BR2_PACKAGE_THUNDER_AVS_ENABLE_PORTAUDIO_SUPPORT),y)
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_ENABLE_PORTAUDIO_SUPPORT=ON
THUNDER_AVS_DEPENDECIES += portaudio
else
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_ENABLE_PORTAUDIO_SUPPORT=OFF
endif

ifeq ($(BR2_PACKAGE_THUNDER_AVS_ENABLE_SMART_SCREEN_SUPPORT),y)
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_ENABLE_SMART_SCREEN_SUPPORT=ON
THUNDER_AVS_DEPENDECIES += alexa-smart-screen-sdk
ifeq ($(BR2_PACKAGE_THUNDER_AVS_ENABLE_SMART_SCREEN),y)
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_ENABLE_SMART_SCREEN=true
else
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_ENABLE_SMART_SCREEN=false
endif
else
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_ENABLE_SMART_SCREEN_SUPPORT=OFF
endif

ifeq ($(BR2_PACKAGE_THUNDER_AVS_ENABLE_KWD_SUPPORT),y)
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_ENABLE_KWD_SUPPORT=ON
THUNDER_AVS_DEPENDECIES += alexa-pryon-kwd
ifeq ($(BR2_PACKAGE_THUNDER_AVS_ENABLE_KWD),y)
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_ENABLE_KWD=true
else
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_ENABLE_KWD=false
endif
ifneq ($(BR2_PACKAGE_THUNDER_AVS_CUSTOM_KWD_MODELS_PATH),"")
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_KWD_MODELS_PATH=$(BR2_PACKAGE_THUNDER_AVS_CUSTOM_KWD_MODELS_PATH)
else
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_KWD_MODELS_PATH="$(call qstrip,$(BR2_PACKAGE_THUNDER_AVS_DATA_PATH))/$(call qstrip,$(BR2_PACKAGE_THUNDER_AVS_PLUGIN_NAME))/models"
endif
else
THUNDER_AVS_CONF_OPTS += -DPLUGIN_AVS_ENABLE_KWD_SUPPORT=OFF
endif


$(eval $(cmake-package))
