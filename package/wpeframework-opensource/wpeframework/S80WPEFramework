#!/bin/sh

start() {
	# Core dumps
	#echo 1 > /proc/sys/kernel/core_uses_pid
	#echo 2 > /proc/sys/fs/suid_dumpable
	#echo "/root/cores/core-pid_%p--process%E" > /proc/sys/kernel/core_pattern
	#mkdir -p /root/cores
	#ulimit -c unlimited

	# wait a bit
	sleep 3

	mount -a

	# make sure netflix has proper mapping
	if [ -f /etc/WPEFramework/plugins/Netflix.json ] && [ ! -d /root/Netflix/dpi ]; then
		mkdir -p /root/Netflix/dpi
		ln -sfn /etc/playready /root/Netflix/dpi/playready
	fi

	# needed for wayland/westeros/weston
	export XDG_RUNTIME_DIR=/tmp

	# wait for cpuinfo to come available
	while [ ! -f /proc/cpuinfo ];
	do
		sleep 1
	done

	# override index.html
	if [ -f /boot/index.html ]; then
		cp /boot/index.html /www/
	fi

	# override config.json
	if [ -f /boot/config.json ]; then
		cp /boot/config.json /www/
	fi

	# read proxy settings from /boot/proxy
	if [ -f /boot/proxy ]; then
		PROXY_IP=`cat /boot/proxy`
		export http_proxy="http://$PROXY_IP"
		export HTTP_PROXY="http://$PROXY_IP"
		export no_proxy="127.0.0.1,localhost,ws.metrological.com,widgets.metrological.com"
		export NO_PROXY="127.0.0.1,localhost,ws.metrological.com,widgets.metrological.com"
	fi

	echo -n "Starting WPEFramework: "
	start-stop-daemon -S -q -b -m -p /var/run/WPEFramework.pid --exec /usr/bin/WPEFramework -- -b -c /etc/WPEFramework/config.json </dev/null >/dev/null 2>&1
	[ $? == 0 ] && echo "OK" || echo "FAIL"
}
stop() {
	echo -n "Stopping WPEFramework: "
	start-stop-daemon -K -q -p /var/run/WPEFramework.pid
	[ $? == 0 ] && echo "OK" || echo "FAIL"
	rm -rf /var/run/WPEFramework.pid
}
restart() {
	stop
	start
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart|reload)
		restart
		;;
	*)
		echo "Usage: $0 {start|stop|restart}"
		exit 1
esac

exit $?
