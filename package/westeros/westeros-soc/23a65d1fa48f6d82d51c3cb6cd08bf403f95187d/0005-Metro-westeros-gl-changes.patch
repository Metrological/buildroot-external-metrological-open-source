diff --git a/drm/westeros-gl/westeros-gl.c b/drm/westeros-gl/westeros-gl.c
index 38559ba..42a6174 100644
--- a/drm/westeros-gl/westeros-gl.c
+++ b/drm/westeros-gl/westeros-gl.c
@@ -66,7 +66,7 @@
 #define TRACE3(...)                 INT_TRACE3(__VA_ARGS__, "")
 #define FRAME(...)                  INT_FRAME(__VA_ARGS__, "")
 
-#define DEFAULT_CARD "/dev/dri/card0"
+// #define DEFAULT_CARD "/dev/dri/card0"
 #ifdef WESTEROS_PLATFORM_QEMUX86
 #define DEFAULT_MODE_WIDTH (1280)
 #define DEFAULT_MODE_HEIGHT (1024)
@@ -336,6 +336,7 @@ typedef struct _WstGLCtx
    bool useVideoServer;
    bool usePlanes;
    bool useGBMModifiers;
+   bool useZPos;
    bool haveAtomic;
    bool haveNativeFence;
    bool graphicsPreferPrimary;
@@ -3655,7 +3656,8 @@ static WstGLCtx *wstInitCtx( void )
               ((len == 3) && !strncmp( drmver->name, "vc4", len )) )
          {
             #ifdef USE_REFRESH_LOCK
-            if ( getenv("WESTEROS_GL_USE_REFRESH_LOCK") )
+            // if ( getenv("WESTEROS_GL_USE_REFRESH_LOCK") )
+            if (true)
             {
                g_useRefreshLock= true;
 
@@ -3669,6 +3671,11 @@ static WstGLCtx *wstInitCtx( void )
             wstInitUEvent( ctx );
             #endif
          }
+         if ( (len == 3) && !strncmp( drmver->name, "vc4", len ) )
+         {
+            ctx->useZPos= true;
+            INFO("using zpos");
+         }
 
          drmFreeVersion( drmver );
       }
@@ -3882,6 +3889,10 @@ static WstGLCtx *wstInitCtx( void )
                               else if ( (len == 4) && !strncmp( prop->name, "zpos", len) )
                               {
                                  zpos= props->prop_values[j];
+                                 if ( prop->flags & DRM_MODE_PROP_IMMUTABLE )
+                                 {
+                                    ctx->useZPos= false;
+                                 }
                               }
                            }
                         }
@@ -3934,7 +3945,22 @@ static WstGLCtx *wstInitCtx( void )
                         newPlane->plane= plane;
                         newPlane->supportsVideo= isVideo;
                         newPlane->supportsGraphics= isGraphics;
-                        newPlane->zOrder= n + zpos*16+((isVideo && !isGraphics) ? 0 : 256);
+                        if ( ctx->useZPos )
+                        {
+                           newPlane->zOrder= n;
+                           if ( isPrimary )
+                           {
+                              newPlane->zOrder += planeRes->count_planes;
+                           }
+                           else if ( isGraphics && !isVideo )
+                           {
+                              newPlane->zOrder += planeRes->count_planes*2;
+                           }
+                        }
+                        else
+                        {
+                           newPlane->zOrder= n + zpos*16+((isVideo && !isGraphics) ? 0 : 256);
+                        }
                         newPlane->inUse= false;
                         newPlane->crtc_id= ctx->enc->crtc_id;
                         for( i= 0; i < ACTIVE_FRAMES; ++i )
@@ -5161,6 +5187,12 @@ static void wstSwapDRMBuffersAtomic( WstGLCtx *ctx )
                   wstAtomicAddProperty( ctx, req, nw->windowPlane->plane->plane_id,
                                         nw->windowPlane->planeProps->count_props, nw->windowPlane->planePropRes,
                                         "IN_FENCE_FD", -1 );
+                  if ( ctx->useZPos )
+                  {
+                     wstAtomicAddProperty( ctx, req, nw->windowPlane->plane->plane_id,
+                                           nw->windowPlane->planeProps->count_props, nw->windowPlane->planePropRes,
+                                           "zpos", nw->windowPlane->zOrder );
+                  }
                }
             }
          }
@@ -5334,6 +5366,12 @@ static void wstSwapDRMBuffersAtomic( WstGLCtx *ctx )
                   wstAtomicAddProperty( ctx, req, iter->plane->plane_id,
                                         iter->planeProps->count_props, iter->planePropRes,
                                         "IN_FENCE_FD", -1 );
+                  if ( ctx->useZPos )
+                  {
+                     wstAtomicAddProperty( ctx, req, iter->plane->plane_id,
+                                           iter->planeProps->count_props, iter->planePropRes,
+                                           "zpos", iter->zOrder );
+                  }
 
                   FRAME("commit frame %d buffer %d", iter->videoFrame[FRAME_CURR].frameNumber, iter->videoFrame[FRAME_CURR].bufferId);
                   avProgLog( iter->videoFrame[FRAME_CURR].frameTime*1000LL, 0, "WtoD", "");
